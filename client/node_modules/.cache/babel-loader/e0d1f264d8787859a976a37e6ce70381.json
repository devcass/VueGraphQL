{"remainingRequest":"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/babel-loader/lib/index.js!/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/src/components/Posts/AddPost.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/src/components/Posts/AddPost.vue","mtime":1534264963000},{"path":"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/cache-loader/dist/cjs.js","mtime":1595162080206},{"path":"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"AddPost\",\n  data: function data() {\n    return {\n      isFormValid: true,\n      title: \"\",\n      imageUrl: \"\",\n      categories: [],\n      description: \"\",\n      titleRules: [function (title) {\n        return !!title || \"Title is required\";\n      }, function (title) {\n        return title.length < 20 || \"Title must have less than 20 characters\";\n      }],\n      imageRules: [function (image) {\n        return !!image || \"Image is required\";\n      }],\n      categoriesRules: [function (categories) {\n        return categories.length >= 1 || \"At least one category is required\";\n      }],\n      descRules: [function (desc) {\n        return !!desc || \"Description is required\";\n      }, function (desc) {\n        return desc.length < 200 || \"Description must have less than 200 characters\";\n      }]\n    };\n  },\n  computed: _objectSpread({}, mapGetters([\"loading\", \"user\"])),\n  methods: {\n    handleAddPost: function handleAddPost() {\n      if (this.$refs.form.validate()) {\n        // add post action\n        this.$store.dispatch(\"addPost\", {\n          title: this.title,\n          imageUrl: this.imageUrl,\n          categories: this.categories,\n          description: this.description,\n          creatorId: this.user._id\n        });\n        this.$router.push(\"/\");\n      }\n    }\n  }\n};",{"version":3,"sources":["AddPost.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,QAAA,SADA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA,mBAAA,IADA;AAEA,aAAA,EAFA;AAGA,gBAAA,EAHA;AAIA,kBAAA,EAJA;AAKA,mBAAA,EALA;AAMA,kBAAA,CACA;AAAA,eAAA,CAAA,CAAA,KAAA,IAAA,mBAAA;AAAA,OADA,EAEA;AAAA,eAAA,MAAA,MAAA,GAAA,EAAA,IAAA,yCAAA;AAAA,OAFA,CANA;AAUA,kBAAA,CAAA;AAAA,eAAA,CAAA,CAAA,KAAA,IAAA,mBAAA;AAAA,OAAA,CAVA;AAWA,uBAAA,CACA;AAAA,eACA,WAAA,MAAA,IAAA,CAAA,IAAA,mCADA;AAAA,OADA,CAXA;AAeA,iBAAA,CACA;AAAA,eAAA,CAAA,CAAA,IAAA,IAAA,yBAAA;AAAA,OADA,EAEA;AAAA,eACA,KAAA,MAAA,GAAA,GAAA,IAAA,gDADA;AAAA,OAFA;AAfA,KAAA;AAqBA,GAxBA;AAyBA,8BACA,WAAA,CAAA,SAAA,EAAA,MAAA,CAAA,CADA,CAzBA;AA4BA,WAAA;AACA,iBADA,2BACA;AACA,UAAA,KAAA,KAAA,CAAA,IAAA,CAAA,QAAA,EAAA,EAAA;AACA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,SAAA,EAAA;AACA,iBAAA,KAAA,KADA;AAEA,oBAAA,KAAA,QAFA;AAGA,sBAAA,KAAA,UAHA;AAIA,uBAAA,KAAA,WAJA;AAKA,qBAAA,KAAA,IAAA,CAAA;AALA,SAAA;AAOA,aAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA;AACA;AAbA;AA5BA,CAAA","sourcesContent":["<template>\n  <v-container text-xs-center mt-5 pt-5>\n\n    <!-- Add Post Title -->\n    <v-layout row wrap>\n      <v-flex xs12 sm6 offset-sm3>\n        <h1 class=\"primary--text\">Add Post</h1>\n      </v-flex>\n    </v-layout>\n\n    <!-- Add Post Form -->\n    <v-layout row wrap>\n      <v-flex xs12 sm6 offset-sm3>\n\n        <v-form v-model=\"isFormValid\" lazy-validation ref=\"form\" @submit.prevent=\"handleAddPost\">\n\n          <!-- Title Input -->\n          <v-layout row>\n            <v-flex xs12>\n              <v-text-field :rules=\"titleRules\" v-model=\"title\" label=\"Post Title\" type=\"text\" required></v-text-field>\n            </v-flex>\n          </v-layout>\n\n          <!-- Image Url Input -->\n          <v-layout row>\n            <v-flex xs12>\n              <v-text-field :rules=\"imageRules\" v-model=\"imageUrl\" label=\"Image URL\" type=\"text\" required></v-text-field>\n            </v-flex>\n          </v-layout>\n\n          <!-- Image Preview -->\n          <v-layout row>\n            <v-flex xs12>\n              <img :src=\"imageUrl\" height=\"300px\">\n            </v-flex>\n          </v-layout>\n\n          <!-- Categories Select -->\n          <v-layout row>\n            <v-flex xs12>\n              <v-select v-model=\"categories\" :rules=\"categoriesRules\" :items=\"['Art', 'Education', 'Food', 'Furniture', 'Travel', 'Photography', 'Technology']\" multiple label=\"Categories\"></v-select>\n            </v-flex>\n          </v-layout>\n\n          <!-- Description Text Area -->\n          <v-layout row>\n            <v-flex xs12>\n              <v-textarea :rules=\"descRules\" v-model=\"description\" label=\"Description\" type=\"text\" required></v-textarea>\n            </v-flex>\n          </v-layout>\n\n          <v-layout row>\n            <v-flex xs12>\n              <v-btn :loading=\"loading\" :disabled=\"!isFormValid || loading\" color=\"info\" type=\"submit\">\n                <span slot=\"loader\" class=\"custom-loader\">\n                  <v-icon light>cached</v-icon>\n                </span>\n                Submit</v-btn>\n            </v-flex>\n          </v-layout>\n\n        </v-form>\n\n      </v-flex>\n    </v-layout>\n\n  </v-container>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"AddPost\",\n  data() {\n    return {\n      isFormValid: true,\n      title: \"\",\n      imageUrl: \"\",\n      categories: [],\n      description: \"\",\n      titleRules: [\n        title => !!title || \"Title is required\",\n        title => title.length < 20 || \"Title must have less than 20 characters\"\n      ],\n      imageRules: [image => !!image || \"Image is required\"],\n      categoriesRules: [\n        categories =>\n          categories.length >= 1 || \"At least one category is required\"\n      ],\n      descRules: [\n        desc => !!desc || \"Description is required\",\n        desc =>\n          desc.length < 200 || \"Description must have less than 200 characters\"\n      ]\n    };\n  },\n  computed: {\n    ...mapGetters([\"loading\", \"user\"])\n  },\n  methods: {\n    handleAddPost() {\n      if (this.$refs.form.validate()) {\n        // add post action\n        this.$store.dispatch(\"addPost\", {\n          title: this.title,\n          imageUrl: this.imageUrl,\n          categories: this.categories,\n          description: this.description,\n          creatorId: this.user._id\n        });\n        this.$router.push(\"/\");\n      }\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/components/Posts"}]}