{"remainingRequest":"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/babel-loader/lib/index.js!/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/src/components/Auth/Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/src/components/Auth/Profile.vue","mtime":1534444631000},{"path":"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/cache-loader/dist/cjs.js","mtime":1595162080206},{"path":"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from \"moment\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"Profile\",\n  data: function data() {\n    return {\n      editPostDialog: false,\n      isFormValid: true,\n      title: \"\",\n      imageUrl: \"\",\n      categories: [],\n      description: \"\",\n      titleRules: [function (title) {\n        return !!title || \"Title is required\";\n      }, function (title) {\n        return title.length < 20 || \"Title must have less than 20 characters\";\n      }],\n      imageRules: [function (image) {\n        return !!image || \"Image is required\";\n      }],\n      categoriesRules: [function (categories) {\n        return categories.length >= 1 || \"At least one category is required\";\n      }],\n      descRules: [function (desc) {\n        return !!desc || \"Description is required\";\n      }, function (desc) {\n        return desc.length < 200 || \"Description must have less than 200 characters\";\n      }]\n    };\n  },\n  computed: _objectSpread({}, mapGetters([\"user\", \"userFavorites\", \"userPosts\"])),\n  created: function created() {\n    this.handleGetUserPosts();\n  },\n  methods: {\n    goToPost: function goToPost(id) {\n      this.$router.push(\"/posts/\".concat(id));\n    },\n    formatJoinDate: function formatJoinDate(date) {\n      return moment(new Date(date)).format(\"ll\");\n    },\n    handleGetUserPosts: function handleGetUserPosts() {\n      this.$store.dispatch(\"getUserPosts\", {\n        userId: this.user._id\n      });\n    },\n    handleUpdateUserPost: function handleUpdateUserPost() {\n      if (this.$refs.form.validate()) {\n        this.$store.dispatch(\"updateUserPost\", {\n          postId: this.postId,\n          userId: this.user._id,\n          title: this.title,\n          imageUrl: this.imageUrl,\n          categories: this.categories,\n          description: this.description\n        });\n        this.editPostDialog = false;\n      }\n    },\n    handleDeleteUserPost: function handleDeleteUserPost(post) {\n      this.loadPost(post, false);\n      var deletePost = window.confirm(\"Are you sure you want to delete this post?\");\n\n      if (deletePost) {\n        this.$store.dispatch(\"deleteUserPost\", {\n          postId: this.postId\n        });\n      }\n    },\n    loadPost: function loadPost(_ref) {\n      var _id = _ref._id,\n          title = _ref.title,\n          imageUrl = _ref.imageUrl,\n          categories = _ref.categories,\n          description = _ref.description;\n      var editPostDialog = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.editPostDialog = editPostDialog;\n      this.postId = _id;\n      this.title = title;\n      this.imageUrl = imageUrl;\n      this.categories = categories;\n      this.description = description;\n    }\n  }\n};",{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4IA,OAAA,MAAA,MAAA,QAAA;AACA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,QAAA,SADA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA,sBAAA,KADA;AAEA,mBAAA,IAFA;AAGA,aAAA,EAHA;AAIA,gBAAA,EAJA;AAKA,kBAAA,EALA;AAMA,mBAAA,EANA;AAOA,kBAAA,CACA;AAAA,eAAA,CAAA,CAAA,KAAA,IAAA,mBAAA;AAAA,OADA,EAEA;AAAA,eAAA,MAAA,MAAA,GAAA,EAAA,IAAA,yCAAA;AAAA,OAFA,CAPA;AAWA,kBAAA,CAAA;AAAA,eAAA,CAAA,CAAA,KAAA,IAAA,mBAAA;AAAA,OAAA,CAXA;AAYA,uBAAA,CACA;AAAA,eACA,WAAA,MAAA,IAAA,CAAA,IAAA,mCADA;AAAA,OADA,CAZA;AAgBA,iBAAA,CACA;AAAA,eAAA,CAAA,CAAA,IAAA,IAAA,yBAAA;AAAA,OADA,EAEA;AAAA,eACA,KAAA,MAAA,GAAA,GAAA,IAAA,gDADA;AAAA,OAFA;AAhBA,KAAA;AAsBA,GAzBA;AA0BA,8BACA,WAAA,CAAA,MAAA,EAAA,eAAA,EAAA,WAAA,CAAA,CADA,CA1BA;AA6BA,SA7BA,qBA6BA;AACA,SAAA,kBAAA;AACA,GA/BA;AAgCA,WAAA;AACA,YADA,oBACA,EADA,EACA;AACA,WAAA,OAAA,CAAA,IAAA,kBAAA,EAAA;AACA,KAHA;AAIA,kBAJA,0BAIA,IAJA,EAIA;AACA,aAAA,OAAA,IAAA,IAAA,CAAA,IAAA,CAAA,EAAA,MAAA,CAAA,IAAA,CAAA;AACA,KANA;AAOA,sBAPA,gCAOA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,cAAA,EAAA;AACA,gBAAA,KAAA,IAAA,CAAA;AADA,OAAA;AAGA,KAXA;AAYA,wBAZA,kCAYA;AACA,UAAA,KAAA,KAAA,CAAA,IAAA,CAAA,QAAA,EAAA,EAAA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,gBAAA,EAAA;AACA,kBAAA,KAAA,MADA;AAEA,kBAAA,KAAA,IAAA,CAAA,GAFA;AAGA,iBAAA,KAAA,KAHA;AAIA,oBAAA,KAAA,QAJA;AAKA,sBAAA,KAAA,UALA;AAMA,uBAAA,KAAA;AANA,SAAA;AAQA,aAAA,cAAA,GAAA,KAAA;AACA;AACA,KAxBA;AAyBA,wBAzBA,gCAyBA,IAzBA,EAyBA;AACA,WAAA,QAAA,CAAA,IAAA,EAAA,KAAA;AACA,UAAA,aAAA,OAAA,OAAA,CACA,4CADA,CAAA;;AAGA,UAAA,UAAA,EAAA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,gBAAA,EAAA;AACA,kBAAA,KAAA;AADA,SAAA;AAGA;AACA,KAnCA;AAoCA,YApCA,0BAuCA;AAAA,UAFA,GAEA,QAFA,GAEA;AAAA,UAFA,KAEA,QAFA,KAEA;AAAA,UAFA,QAEA,QAFA,QAEA;AAAA,UAFA,UAEA,QAFA,UAEA;AAAA,UAFA,WAEA,QAFA,WAEA;AAAA,UADA,cACA,uEADA,IACA;AACA,WAAA,cAAA,GAAA,cAAA;AACA,WAAA,MAAA,GAAA,GAAA;AACA,WAAA,KAAA,GAAA,KAAA;AACA,WAAA,QAAA,GAAA,QAAA;AACA,WAAA,UAAA,GAAA,UAAA;AACA,WAAA,WAAA,GAAA,WAAA;AACA;AA9CA;AAhCA,CAAA","sourcesContent":["<template>\n  <v-container class=\"text-xs-center\">\n\n    <!-- User Details Card -->\n    <v-flex sm6 offset-sm3>\n      <v-card class=\"white--text\" color=\"secondary\">\n        <v-layout>\n          <v-flex xs5>\n            <v-card-media height=\"125px\" contain :src=\"user.avatar\"></v-card-media>\n          </v-flex>\n          <v-flex xs7>\n            <v-card-title primary-title>\n              <div>\n                <div class=\"headline\">{{user.username}}</div>\n                <div>Joined {{formatJoinDate(user.joinDate)}}</div>\n                <div class=\"hidden-xs-only font-weight-thin\">{{user.favorites.length}} Favorites</div>\n                <div class=\"hidden-xs-only font-weight-thin\">{{userPosts.length}} Posts Added</div>\n              </div>\n            </v-card-title>\n          </v-flex>\n        </v-layout>\n      </v-card>\n    </v-flex>\n\n    <!-- Posts Favorited by User -->\n    <v-container v-if=\"!userFavorites.length\">\n      <v-layout row wrap>\n        <v-flex xs12>\n          <h2>You have no favorites currently. Go and add some!</h2>\n        </v-flex>\n      </v-layout>\n    </v-container>\n\n    <v-container class=\"mt-3\" v-else>\n      <v-flex xs12>\n        <h2 class=\"font-weight-light\">Favorited\n          <span class=\"font-weight-regular\">({{userFavorites.length}})</span>\n        </h2>\n      </v-flex>\n      <v-layout row wrap>\n        <v-flex xs12 sm6 v-for=\"favorite in userFavorites\" :key=\"favorite._id\">\n          <v-card class=\"mt-3 ml-1 mr-2\" hover>\n            <v-card-media @click=\"goToPost(favorite._id)\" height=\"30vh\" :src=\"favorite.imageUrl\"></v-card-media>\n            <v-card-text>{{favorite.title}}</v-card-text>\n          </v-card>\n        </v-flex>\n      </v-layout>\n    </v-container>\n\n    <!-- Posts Created By user -->\n    <v-container v-if=\"!userPosts.length\">\n      <v-layout row wrap>\n        <v-flex xs12>\n          <h2>You have no posts currently. Go and add some!</h2>\n        </v-flex>\n      </v-layout>\n    </v-container>\n\n    <v-container class=\"mt-3\" v-else>\n      <v-flex xs12>\n        <h2 class=\"font-weight-light\">Your Posts\n          <span class=\"font-weight-regular\">({{userPosts.length}})</span>\n        </h2>\n      </v-flex>\n      <v-layout row wrap>\n        <v-flex xs12 sm6 v-for=\"post in userPosts\" :key=\"post._id\">\n          <v-card class=\"mt-3 ml-1 mr-2\" hover>\n            <v-btn @click=\"loadPost(post)\" color=\"info\" floating fab small dark>\n              <v-icon>edit</v-icon>\n            </v-btn>\n            <v-btn @click=\"handleDeleteUserPost(post)\" color=\"error\" floating fab small dark>\n              <v-icon>delete</v-icon>\n            </v-btn>\n\n            <v-card-media @click=\"goToPost(post._id)\" height=\"30vh\" :src=\"post.imageUrl\"></v-card-media>\n            <v-card-text>{{post.title}}</v-card-text>\n          </v-card>\n        </v-flex>\n      </v-layout>\n    </v-container>\n\n    <!-- Edit Post Dialog -->\n    <v-dialog xs12 sm6 offset-sm3 persistent v-model=\"editPostDialog\">\n      <v-card>\n        <v-card-title class=\"headline grey lighten-2\">Update Post</v-card-title>\n        <v-container>\n          <v-form v-model=\"isFormValid\" lazy-validation ref=\"form\" @submit.prevent=\"handleUpdateUserPost\">\n\n            <!-- Title Input -->\n            <v-layout row>\n              <v-flex xs12>\n                <v-text-field :rules=\"titleRules\" v-model=\"title\" label=\"Post Title\" type=\"text\" required></v-text-field>\n              </v-flex>\n            </v-layout>\n\n            <!-- Image Url Input -->\n            <v-layout row>\n              <v-flex xs12>\n                <v-text-field :rules=\"imageRules\" v-model=\"imageUrl\" label=\"Image URL\" type=\"text\" required></v-text-field>\n              </v-flex>\n            </v-layout>\n\n            <!-- Image Preview -->\n            <v-layout row>\n              <v-flex xs12>\n                <img :src=\"imageUrl\" height=\"300px\">\n              </v-flex>\n            </v-layout>\n\n            <!-- Categories Select -->\n            <v-layout row>\n              <v-flex xs12>\n                <v-select v-model=\"categories\" :rules=\"categoriesRules\" :items=\"['Art', 'Education', 'Food', 'Furniture', 'Travel', 'Photography', 'Technology']\" multiple label=\"Categories\"></v-select>\n              </v-flex>\n            </v-layout>\n\n            <!-- Description Text Area -->\n            <v-layout row>\n              <v-flex xs12>\n                <v-textarea :rules=\"descRules\" v-model=\"description\" label=\"Description\" type=\"text\" required></v-textarea>\n              </v-flex>\n            </v-layout>\n\n            <v-divider></v-divider>\n\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn :disabled=\"!isFormValid\" type=\"submit\" class=\"success--text\" flat>Update</v-btn>\n              <v-btn class=\"error--text\" flat @click=\"editPostDialog = false\">Cancel</v-btn>\n            </v-card-actions>\n\n          </v-form>\n        </v-container>\n      </v-card>\n    </v-dialog>\n\n  </v-container>\n</template>\n\n<script>\nimport moment from \"moment\";\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"Profile\",\n  data() {\n    return {\n      editPostDialog: false,\n      isFormValid: true,\n      title: \"\",\n      imageUrl: \"\",\n      categories: [],\n      description: \"\",\n      titleRules: [\n        title => !!title || \"Title is required\",\n        title => title.length < 20 || \"Title must have less than 20 characters\"\n      ],\n      imageRules: [image => !!image || \"Image is required\"],\n      categoriesRules: [\n        categories =>\n          categories.length >= 1 || \"At least one category is required\"\n      ],\n      descRules: [\n        desc => !!desc || \"Description is required\",\n        desc =>\n          desc.length < 200 || \"Description must have less than 200 characters\"\n      ]\n    };\n  },\n  computed: {\n    ...mapGetters([\"user\", \"userFavorites\", \"userPosts\"])\n  },\n  created() {\n    this.handleGetUserPosts();\n  },\n  methods: {\n    goToPost(id) {\n      this.$router.push(`/posts/${id}`);\n    },\n    formatJoinDate(date) {\n      return moment(new Date(date)).format(\"ll\");\n    },\n    handleGetUserPosts() {\n      this.$store.dispatch(\"getUserPosts\", {\n        userId: this.user._id\n      });\n    },\n    handleUpdateUserPost() {\n      if (this.$refs.form.validate()) {\n        this.$store.dispatch(\"updateUserPost\", {\n          postId: this.postId,\n          userId: this.user._id,\n          title: this.title,\n          imageUrl: this.imageUrl,\n          categories: this.categories,\n          description: this.description\n        });\n        this.editPostDialog = false;\n      }\n    },\n    handleDeleteUserPost(post) {\n      this.loadPost(post, false);\n      const deletePost = window.confirm(\n        \"Are you sure you want to delete this post?\"\n      );\n      if (deletePost) {\n        this.$store.dispatch(\"deleteUserPost\", {\n          postId: this.postId\n        });\n      }\n    },\n    loadPost(\n      { _id, title, imageUrl, categories, description },\n      editPostDialog = true\n    ) {\n      this.editPostDialog = editPostDialog;\n      this.postId = _id;\n      this.title = title;\n      this.imageUrl = imageUrl;\n      this.categories = categories;\n      this.description = description;\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/components/Auth"}]}