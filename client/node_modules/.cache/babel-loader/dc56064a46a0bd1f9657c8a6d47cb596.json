{"remainingRequest":"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/babel-loader/lib/index.js!/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/src/components/Posts/Posts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/src/components/Posts/Posts.vue","mtime":1534444748000},{"path":"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/cache-loader/dist/cjs.js","mtime":1595162080206},{"path":"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/@babel/runtime/helpers/builtin/es6/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from \"moment\";\nimport { INFINITE_SCROLL_POSTS } from \"../../queries\";\nvar pageSize = 2;\nexport default {\n  name: \"Posts\",\n  data: function data() {\n    return {\n      pageNum: 1,\n      // showMoreEnabled: true,\n      showPostCreator: false\n    };\n  },\n  apollo: {\n    infiniteScrollPosts: {\n      query: INFINITE_SCROLL_POSTS,\n      variables: {\n        pageNum: 1,\n        pageSize: pageSize\n      }\n    }\n  },\n  computed: {\n    showMoreEnabled: function showMoreEnabled() {\n      return this.infiniteScrollPosts && this.infiniteScrollPosts.hasMore;\n    }\n  },\n  methods: {\n    goToPost: function goToPost(postId) {\n      this.$router.push(\"/posts/\".concat(postId));\n    },\n    formatCreatedDate: function formatCreatedDate(date) {\n      return moment(new Date(date)).format(\"ll\");\n    },\n    showMorePosts: function showMorePosts() {\n      this.pageNum += 1; // fetch more data and transform original result\n\n      this.$apollo.queries.infiniteScrollPosts.fetchMore({\n        variables: {\n          // pageNum incremented by 1\n          pageNum: this.pageNum,\n          pageSize: pageSize\n        },\n        updateQuery: function updateQuery(prevResult, _ref) {\n          var fetchMoreResult = _ref.fetchMoreResult;\n          console.log(\"previous result\", prevResult.infiniteScrollPosts.posts);\n          console.log(\"fetch more result\", fetchMoreResult);\n          var newPosts = fetchMoreResult.infiniteScrollPosts.posts;\n          var hasMore = fetchMoreResult.infiniteScrollPosts.hasMore; // this.showMoreEnabled = hasMore;\n\n          return {\n            infiniteScrollPosts: {\n              __typename: prevResult.infiniteScrollPosts.__typename,\n              // Merge previous posts with new posts\n              posts: _toConsumableArray(prevResult.infiniteScrollPosts.posts).concat(_toConsumableArray(newPosts)),\n              hasMore: hasMore\n            }\n          };\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["Posts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA,OAAA,MAAA,MAAA,QAAA;AACA,SAAA,qBAAA,QAAA,eAAA;AAEA,IAAA,WAAA,CAAA;AAEA,eAAA;AACA,QAAA,OADA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA,eAAA,CADA;AAEA;AACA,uBAAA;AAHA,KAAA;AAKA,GARA;AASA,UAAA;AACA,yBAAA;AACA,aAAA,qBADA;AAEA,iBAAA;AACA,iBAAA,CADA;AAEA;AAFA;AAFA;AADA,GATA;AAkBA,YAAA;AACA,mBADA,6BACA;AACA,aAAA,KAAA,mBAAA,IAAA,KAAA,mBAAA,CAAA,OAAA;AACA;AAHA,GAlBA;AAuBA,WAAA;AACA,YADA,oBACA,MADA,EACA;AACA,WAAA,OAAA,CAAA,IAAA,kBAAA,MAAA;AACA,KAHA;AAIA,qBAJA,6BAIA,IAJA,EAIA;AACA,aAAA,OAAA,IAAA,IAAA,CAAA,IAAA,CAAA,EAAA,MAAA,CAAA,IAAA,CAAA;AACA,KANA;AAOA,iBAPA,2BAOA;AACA,WAAA,OAAA,IAAA,CAAA,CADA,CAEA;;AACA,WAAA,OAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,SAAA,CAAA;AACA,mBAAA;AACA;AACA,mBAAA,KAAA,OAFA;AAGA;AAHA,SADA;AAMA,qBAAA,qBAAA,UAAA,QAAA;AAAA,cAAA,eAAA,QAAA,eAAA;AACA,kBAAA,GAAA,CAAA,iBAAA,EAAA,WAAA,mBAAA,CAAA,KAAA;AACA,kBAAA,GAAA,CAAA,mBAAA,EAAA,eAAA;AAEA,cAAA,WAAA,gBAAA,mBAAA,CAAA,KAAA;AACA,cAAA,UAAA,gBAAA,mBAAA,CAAA,OAAA,CALA,CAMA;;AAEA,iBAAA;AACA,iCAAA;AACA,0BAAA,WAAA,mBAAA,CAAA,UADA;AAEA;AACA,wCAAA,WAAA,mBAAA,CAAA,KAAA,4BAAA,QAAA,EAHA;AAIA;AAJA;AADA,WAAA;AAQA;AAtBA,OAAA;AAwBA;AAlCA;AAvBA,CAAA","sourcesContent":["<template>\n  <v-container fluid grid-list-xl>\n\n    <!-- Post Cards -->\n    <v-layout row wrap v-if=\"infiniteScrollPosts\">\n      <v-flex xs12 sm6 v-for=\"post in infiniteScrollPosts.posts\" :key=\"post._id\">\n        <v-card hover>\n          <v-card-media @click.native=\"goToPost(post._id)\" :src=\"post.imageUrl\" height=\"30vh\" lazy></v-card-media>\n\n          <v-card-actions>\n            <v-card-title primary>\n              <div>\n                <div class=\"headline\">{{post.title}}</div>\n                <span class=\"grey--text\">{{post.likes}} likes - {{post.messages.length}} comments</span>\n              </div>\n            </v-card-title>\n            <v-spacer></v-spacer>\n            <v-btn @click=\"showPostCreator = !showPostCreator\" icon>\n              <v-icon>{{`keyboard_arrow_${showPostCreator ? 'up' : 'down'}`}}</v-icon>\n            </v-btn>\n          </v-card-actions>\n\n          <!-- Post Creator Tile -->\n          <v-slide-y-transition>\n            <v-card-text v-show=\"showPostCreator\" class=\"grey lighten-4\">\n              <v-list-tile avatar>\n                <v-list-tile-avatar>\n                  <img :src=\"post.createdBy.avatar\">\n                </v-list-tile-avatar>\n\n                <v-list-tile-content>\n                  <v-list-tile-title class=\"text--primary\">{{post.createdBy.username}}</v-list-tile-title>\n                  <v-list-tile-sub-title class=\"font-weight-thin\">Added {{formatCreatedDate(post.createdDate)}}</v-list-tile-sub-title>\n                </v-list-tile-content>\n\n                <v-list-tile-action>\n                  <v-btn icon ripple>\n                    <v-icon color=\"grey lighten-1\">info</v-icon>\n                  </v-btn>\n                </v-list-tile-action>\n              </v-list-tile>\n            </v-card-text>\n          </v-slide-y-transition>\n\n        </v-card>\n      </v-flex>\n    </v-layout>\n\n    <!-- Fetch More Button -->\n    <v-layout v-if=\"showMoreEnabled\" column>\n      <v-flex xs12>\n        <v-layout justify-center row>\n          <v-btn color=\"info\" @click=\"showMorePosts\">Fetch More</v-btn>\n        </v-layout>\n      </v-flex>\n    </v-layout>\n\n  </v-container>\n</template>\n\n<script>\nimport moment from \"moment\";\nimport { INFINITE_SCROLL_POSTS } from \"../../queries\";\n\nconst pageSize = 2;\n\nexport default {\n  name: \"Posts\",\n  data() {\n    return {\n      pageNum: 1,\n      // showMoreEnabled: true,\n      showPostCreator: false\n    };\n  },\n  apollo: {\n    infiniteScrollPosts: {\n      query: INFINITE_SCROLL_POSTS,\n      variables: {\n        pageNum: 1,\n        pageSize\n      }\n    }\n  },\n  computed: {\n    showMoreEnabled() {\n      return this.infiniteScrollPosts && this.infiniteScrollPosts.hasMore;\n    }\n  },\n  methods: {\n    goToPost(postId) {\n      this.$router.push(`/posts/${postId}`);\n    },\n    formatCreatedDate(date) {\n      return moment(new Date(date)).format(\"ll\");\n    },\n    showMorePosts() {\n      this.pageNum += 1;\n      // fetch more data and transform original result\n      this.$apollo.queries.infiniteScrollPosts.fetchMore({\n        variables: {\n          // pageNum incremented by 1\n          pageNum: this.pageNum,\n          pageSize\n        },\n        updateQuery: (prevResult, { fetchMoreResult }) => {\n          console.log(\"previous result\", prevResult.infiniteScrollPosts.posts);\n          console.log(\"fetch more result\", fetchMoreResult);\n\n          const newPosts = fetchMoreResult.infiniteScrollPosts.posts;\n          const hasMore = fetchMoreResult.infiniteScrollPosts.hasMore;\n          // this.showMoreEnabled = hasMore;\n\n          return {\n            infiniteScrollPosts: {\n              __typename: prevResult.infiniteScrollPosts.__typename,\n              // Merge previous posts with new posts\n              posts: [...prevResult.infiniteScrollPosts.posts, ...newPosts],\n              hasMore\n            }\n          };\n        }\n      });\n    }\n  }\n};\n</script>\n"],"sourceRoot":"src/components/Posts"}]}