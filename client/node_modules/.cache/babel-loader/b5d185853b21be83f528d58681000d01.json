{"remainingRequest":"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/babel-loader/lib/index.js!/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/src/components/Auth/Signup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/src/components/Auth/Signup.vue","mtime":1534206170000},{"path":"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/cache-loader/dist/cjs.js","mtime":1595162080206},{"path":"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/devcass/Courses/udemy-full-stack-vue-gql-cg/code/16 Deployment with Now/082 Deploying-Backend-Frontend-with-Now/client/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"Signup\",\n  data: function data() {\n    var _this = this;\n\n    return {\n      isFormValid: true,\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n      usernameRules: [function (username) {\n        return !!username || \"Username is required\";\n      }, function (username) {\n        return username.length < 10 || \"Username cannot be more than 10 characters\";\n      }],\n      emailRules: [function (email) {\n        return !!email || \"Email is required\";\n      }, function (email) {\n        return /.@+./.test(email) || \"Email must be valid\";\n      }],\n      passwordRules: [function (password) {\n        return !!password || \"Password is required\";\n      }, function (password) {\n        return password.length >= 4 || \"Password must be at least 4 characters\";\n      }, function (confirmation) {\n        return confirmation === _this.password || \"Passwords must match\";\n      }]\n    };\n  },\n  watch: {\n    user: function user(value) {\n      // if user value changes, redirect to home page\n      if (value) {\n        this.$router.push(\"/\");\n      }\n    }\n  },\n  computed: _objectSpread({}, mapGetters([\"loading\", \"error\", \"user\"])),\n  methods: {\n    handleSignupUser: function handleSignupUser() {\n      if (this.$refs.form.validate()) {\n        this.$store.dispatch(\"signupUser\", {\n          username: this.username,\n          email: this.email,\n          password: this.password\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["Signup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,QAAA,QADA;AAEA,MAFA,kBAEA;AAAA;;AACA,WAAA;AACA,mBAAA,IADA;AAEA,gBAAA,EAFA;AAGA,aAAA,EAHA;AAIA,gBAAA,EAJA;AAKA,4BAAA,EALA;AAMA,qBAAA,CACA;AAAA,eAAA,CAAA,CAAA,QAAA,IAAA,sBAAA;AAAA,OADA,EAEA;AAAA,eACA,SAAA,MAAA,GAAA,EAAA,IAAA,4CADA;AAAA,OAFA,CANA;AAWA,kBAAA,CACA;AAAA,eAAA,CAAA,CAAA,KAAA,IAAA,mBAAA;AAAA,OADA,EAEA;AAAA,eAAA,OAAA,IAAA,CAAA,KAAA,KAAA,qBAAA;AAAA,OAFA,CAXA;AAeA,qBAAA,CACA;AAAA,eAAA,CAAA,CAAA,QAAA,IAAA,sBAAA;AAAA,OADA,EAEA;AAAA,eACA,SAAA,MAAA,IAAA,CAAA,IAAA,wCADA;AAAA,OAFA,EAIA;AAAA,eAAA,iBAAA,MAAA,QAAA,IAAA,sBAAA;AAAA,OAJA;AAfA,KAAA;AAsBA,GAzBA;AA0BA,SAAA;AACA,QADA,gBACA,KADA,EACA;AACA;AACA,UAAA,KAAA,EAAA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA;AACA;AANA,GA1BA;AAkCA,8BACA,WAAA,CAAA,SAAA,EAAA,OAAA,EAAA,MAAA,CAAA,CADA,CAlCA;AAqCA,WAAA;AACA,oBADA,8BACA;AACA,UAAA,KAAA,KAAA,CAAA,IAAA,CAAA,QAAA,EAAA,EAAA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAAA;AACA,oBAAA,KAAA,QADA;AAEA,iBAAA,KAAA,KAFA;AAGA,oBAAA,KAAA;AAHA,SAAA;AAKA;AACA;AATA;AArCA,CAAA","sourcesContent":["<template>\n  <v-container text-xs-center mt-5 pt-5>\n\n    <!-- Signup Title -->\n    <v-layout row wrap>\n      <v-flex xs12 sm6 offset-sm3>\n        <h1>Get Started Here</h1>\n      </v-flex>\n    </v-layout>\n\n    <!-- Error Alert -->\n    <v-layout v-if=\"error\" row wrap>\n      <v-flex xs12 sm6 offset-sm3>\n        <form-alert :message=\"error.message\"></form-alert>\n      </v-flex>\n    </v-layout>\n\n    <!-- Signup Form -->\n    <v-layout row wrap>\n      <v-flex xs12 sm6 offset-sm3>\n        <v-card color=\"accent\" dark>\n          <v-container>\n            <v-form v-model=\"isFormValid\" lazy-validation ref=\"form\" @submit.prevent=\"handleSignupUser\">\n\n              <v-layout row>\n                <v-flex xs12>\n                  <v-text-field :rules=\"usernameRules\" v-model=\"username\" prepend-icon=\"face\" label=\"Username\" type=\"text\" required></v-text-field>\n                </v-flex>\n              </v-layout>\n\n              <v-layout row>\n                <v-flex xs12>\n                  <v-text-field :rules=\"emailRules\" v-model=\"email\" prepend-icon=\"email\" label=\"Email\" type=\"email\" required></v-text-field>\n                </v-flex>\n              </v-layout>\n\n              <v-layout row>\n                <v-flex xs12>\n                  <v-text-field :rules=\"passwordRules\" v-model=\"password\" prepend-icon=\"extension\" label=\"Password\" type=\"password\" required></v-text-field>\n                </v-flex>\n              </v-layout>\n\n              <v-layout row>\n                <v-flex xs12>\n                  <v-text-field :rules=\"passwordRules\" v-model=\"passwordConfirmation\" prepend-icon=\"gavel\" label=\"Confirm Password\" type=\"password\" required></v-text-field>\n                </v-flex>\n              </v-layout>\n\n              <v-layout row>\n                <v-flex xs12>\n                  <v-btn :loading=\"loading\" :disabled=\"!isFormValid || loading\" color=\"info\" type=\"submit\">\n                    <span slot=\"loader\" class=\"custom-loader\">\n                      <v-icon light>cached</v-icon>\n                    </span>\n                    Signup</v-btn>\n                  <h3>Already have an account?\n                    <router-link to=\"/signin\">Signin</router-link>\n                  </h3>\n                </v-flex>\n              </v-layout>\n\n            </v-form>\n          </v-container>\n        </v-card>\n      </v-flex>\n    </v-layout>\n\n  </v-container>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"Signup\",\n  data() {\n    return {\n      isFormValid: true,\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\",\n      usernameRules: [\n        username => !!username || \"Username is required\",\n        username =>\n          username.length < 10 || \"Username cannot be more than 10 characters\"\n      ],\n      emailRules: [\n        email => !!email || \"Email is required\",\n        email => /.@+./.test(email) || \"Email must be valid\"\n      ],\n      passwordRules: [\n        password => !!password || \"Password is required\",\n        password =>\n          password.length >= 4 || \"Password must be at least 4 characters\",\n        confirmation => confirmation === this.password || \"Passwords must match\"\n      ]\n    };\n  },\n  watch: {\n    user(value) {\n      // if user value changes, redirect to home page\n      if (value) {\n        this.$router.push(\"/\");\n      }\n    }\n  },\n  computed: {\n    ...mapGetters([\"loading\", \"error\", \"user\"])\n  },\n  methods: {\n    handleSignupUser() {\n      if (this.$refs.form.validate()) {\n        this.$store.dispatch(\"signupUser\", {\n          username: this.username,\n          email: this.email,\n          password: this.password\n        });\n      }\n    }\n  }\n};\n</script>"],"sourceRoot":"src/components/Auth"}]}